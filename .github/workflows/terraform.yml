name: Terraform CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      # Repository auschecken
      - name: Checkout repository
        uses: actions/checkout@v3

      # AWS-Anmeldedaten konfigurieren
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: eu-central-1

      # Terraform installieren
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6 # Anpassen an Ihre Version

      # Terraform initialisieren
      - name: Terraform Init
        run: terraform init

      # Terraform Format pr端fen
      - name: Terraform Format Check
        run: terraform fmt -check

      # Terraform Validierung ausf端hren
      - name: Terraform Validate
        run: terraform validate

      # Terraform Plan ausf端hren (bei Pull Requests)
      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -out=tfplan

        # Dateipfad anzeigen lassen um tfplan datei zu finden
      - name: Dateipfade anzeigen lassen
        run: ls -la

      # Terraform Apply ausf端hren (bei Push auf main)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan
