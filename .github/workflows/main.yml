name: Test-Projects
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Node aktualisieren
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Abh채ngigkeiten installieren
        run: npm install

      - name: React Test ausf체hrung
        run: npm run test

  image_push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      # build job soll den build ordner als artefakt hochladen
      # schritt 1: code auschecken
      - name: Check out code
        uses: actions/checkout@v4
      # schritt 2: node installieren
      # wir probieren diesen schritt wegzulassen
      - name: Node aktualisieren
        uses: actions/setup-node@v4
        with:
          node-version: 22
      # schritt 3: abh채ngigkeiten installieren
      - name: Abh채ngigkeiten installieren
        run: npm install
      # schritt 4: Projekt-build bauen
      - name: Image erstellen
        run: docker buildx build -t klatschenderaffe/reactappimage .
      # schritt 5: build ergebnisse hochladen
      # Step 2: Log in to Docker Hub (if accessing private images)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: klatschenderaffe
          password: ${{ secrets.PASSWORD }}
      - name: Image pushen
        run: docker push klatschenderaffe/reactappimage

  image_pull:
    runs-on: ubuntu-latest
    needs: image_push
    steps:
      - name: dockerhub login
        run: docker login -u klatschenderaffe -p ${{secrets.PASSWORD}}
      - name: Image pullen
        run: docker pull klatschenderaffe/reactappimage
      - name: Container starten
        run: docker run klatschenderaffe/reactappimage:latest
